{"version":3,"file":"static/js/38.49448e90.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,eAGnB,C,+GCkDA,UArDc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAkB1B,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAlBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAKTC,EAAW,CACfC,MAJYL,EAAEG,cAAcG,SAASC,UAAUC,MAK/CC,SAJeT,EAAEG,cAAcG,SAASI,aAAaF,OAOvDjB,GAASoB,EAAAA,EAAAA,IAAUP,IAEnBF,EAAKU,OACP,EAGgCC,UAAWC,EAAAA,EAAAA,KAASC,SAAA,EAChDjB,EAAAA,EAAAA,MAAA,SAAOe,UAAWC,EAAAA,EAAAA,UAAcC,SAAA,CAAC,UAE/BhC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,QACLC,KAAK,YACLC,YAAY,kBACZC,UAAQ,EACRN,UAAWC,EAAAA,EAAAA,gBAGfhB,EAAAA,EAAAA,MAAA,SAAOe,UAAWC,EAAAA,EAAAA,UAAcC,SAAA,CAAC,aAE/BhC,EAAAA,EAAAA,KAAA,SACEiC,KAAK,WACLC,KAAK,eACLC,YAAY,WACZC,UAAQ,EACRN,UAAWC,EAAAA,EAAAA,gBAIf/B,EAAAA,EAAAA,KAAA,UAAQiC,KAAK,SAASH,UAAWC,EAAAA,EAAAA,OAAWC,SAAC,YAG5CtB,IAAaV,EAAAA,EAAAA,KAACD,EAAAA,EAAM,IACV,OAAVc,GAAkBwB,IAAAA,OAAAA,QAAwB,CAAExB,MAAAA,MAGnD,C","sources":["components/Loader/Loader.jsx","pages/Login.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authLogin } from '../redux/auth/operations';\nimport css from '../components/ContactForm/ContactForm.module.css';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../components/Loader/Loader';\nimport {\n  selectAuthError,\n  selectAuthIsLoading,\n} from '../redux/auth/auth.selectors';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n  const error = useSelector(selectAuthError);\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const email = e.currentTarget.elements.userEmail.value;\n    const password = e.currentTarget.elements.userPassword.value;\n\n    const userData = {\n      email,\n      password,\n    };\n\n    dispatch(authLogin(userData));\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={onSubmitForm} className={css.form}>\n      <label className={css.labelForm}>\n        Email:\n        <input\n          type=\"email\"\n          name=\"userEmail\"\n          placeholder=\"email@email.com\"\n          required\n          className={css.inputForm}\n        />\n      </label>\n      <label className={css.labelForm}>\n        Password:\n        <input\n          type=\"password\"\n          name=\"userPassword\"\n          placeholder=\"********\"\n          required\n          className={css.inputForm}\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Sign In\n      </button>\n      {isLoading && <Loader />}\n      {error !== null && Notiflix.Notify.warning({ error })}\n    </form>\n  );\n};\n\nexport default Login;\n"],"names":["Loader","_jsx","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","error","selectAuthError","_jsxs","onSubmit","e","preventDefault","form","currentTarget","userData","email","elements","userEmail","value","password","userPassword","authLogin","reset","className","css","children","type","name","placeholder","required","Notiflix"],"sourceRoot":""}