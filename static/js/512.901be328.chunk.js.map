{"version":3,"file":"static/js/512.901be328.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","redux/contacts/contacts.selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ModalContactDetail/ModalContactDetail.module.css?10ec","redux/modalContactDetail/modalContactDetail.selectors.js","components/ModalContactDetail/ModalContactDetail.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Title/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsStore.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.contactsStore.contacts.isLoading;\nexport const selectContactsError = state => state.contactsStore.contacts.error;\nexport const selectContactsFilter = state => state.contactsStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Notiflix from 'notiflix';\n\nimport css from './ContactForm.module.css';\nimport { selectContacts } from '../../redux/contacts/contacts.selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name,\n      number,\n    };\n\n    const hasDuplicates = contacts.some(\n      item =>\n        item.name.toLowerCase() === newUser.name.toLowerCase() ||\n        item.number === newUser.number\n    );\n\n    if (hasDuplicates) {\n      Notiflix.Notify.failure(`A contact with the name: '${newUser.name}' and \n      number: '${newUser.number}' is already in the list!`);\n      return;\n    }\n    dispatch(addContact(newUser));\n\n    setName('');\n    setNumber('');\n  };\n\n  const onChangeInput = e => {\n    const value = e.target.value;\n    const nameInput = e.target.name;\n\n    switch (nameInput) {\n      case 'name':\n        setName(value);\n        return;\n\n      case 'number':\n        setNumber(value);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={onFormSubmit}>\n        <label className={css.labelForm}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Your name\"\n          className={css.inputForm}\n          value={name}\n          onChange={onChangeInput}\n        />\n        <label className={css.labelForm}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          required\n          placeholder=\"Your number\"\n          pattern=\"^\\+?\\d{1,4}[ .\\-]?\\(?\\d{1,3}\\)?[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,9}$\"\n          className={css.inputForm}\n          value={number}\n          onChange={onChangeInput}\n        />\n        <button type=\"submit\" className={css.button}>\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"text\":\"ContactList_text__+NWAW\",\"textNumber\":\"ContactList_textNumber__WI5VU\",\"textName\":\"ContactList_textName__qctYv\",\"buttons\":\"ContactList_buttons__WPzvW\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"ModalContactDetail_backdrop__se24b\",\"modal\":\"ModalContactDetail_modal__VH9GL\",\"closeBtn\":\"ModalContactDetail_closeBtn__bdjEJ\",\"infoContact\":\"ModalContactDetail_infoContact__BF55x\",\"icon\":\"ModalContactDetail_icon__oo9x7\"};","export const selectIsOpenModal = state => state.modalStore.isOpenModal;\nexport const selectModalData = state => state.modalStore.modalData;\n","\nimport css from './ModalContactDetail.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from '../../redux/modalContactDetail/modalContactDetail.reducer'\nimport { selectModalData } from '../../redux/modalContactDetail/modalContactDetail.selectors';\nimport icon from '../../img/icon.webp';\nconst ModalContactDetail = () => {\n  const dispatch = useDispatch();\n  const modalData = useSelector(selectModalData);\n  console.dir(modalData);\n\n  return (\n    <div className={css.backdrop}>\n      <div className={css.modal}>\n        <button className={css.closeBtn} onClick={() => dispatch(closeModal())}>\n          ‚ùå\n        </button>\n        <div className={css.infoContact}>\n          <img src={icon} alt=\"icon profile\" width=\"200\" className={css.icon} />\n          <h2 className={css.title}>Name: {modalData.name}</h2>\n          <h2 className={css.title}>Phone: {modalData.number}</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalContactDetail;\n","import React, { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from '../../redux/contacts/contacts.selectors';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { openModal } from '../../redux/modalContactDetail/modalContactDetail.reducer';\nimport ModalContactDetail from '../ModalContactDetail/ModalContactDetail';\nimport { selectIsOpenModal } from '../../redux/modalContactDetail/modalContactDetail.selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isOpenModal = useSelector(selectIsOpenModal);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ul className={css.list}>\n        {contacts.length > 0 ? (\n          contacts.map(({ id, name, number }) => {\n            return (\n              <li key={id} className={css.listItem}>\n                <div className={css.text}>\n                  <p className={css.textName}>{name}</p>\n                  <span className={css.textNumber}>{number}</span>\n                </div>\n                <div className={css.buttons}>\n                  <button\n                    type=\"button\"\n                    className={css.button}\n                    onClick={() => dispatch(openModal({ name, number }))}\n                  >\n                    More\n                  </button>\n                  <button\n                    type=\"button\"\n                    className={css.button}\n                    onClick={() => dispatch(deleteContact(id))}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })\n        ) : (\n          <p>Sorry, no contacts :( </p>\n        )}\n      </ul>\n\n      {isOpenModal && <ModalContactDetail />}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"inputForm\":\"Filter_inputForm__uEF1C\",\"labelForm\":\"Filter_labelForm__hcONs\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './Filter.module.css';\nimport { filterValue } from '../../redux/contacts/contacts.reducer';\nimport { selectContactsFilter } from '../../redux/contacts/contacts.selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeInput = e => {\n    const value = e.target.value;\n    dispatch(filterValue(value));\n  };\n\n  return (\n    <div className={css.container}>\n      <label className={css.labelForm}>Find contact by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={css.inputForm}\n        onChange={onChangeInput}\n        value={filter}\n      />\n    </div>\n  );\n};\n","import css from '../ContactForm/ContactForm.module.css';\n\nexport const Title = ({ title }) => {\n  return <h2 className={css.title}>{title}</h2>;\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Loader } from '../components/Loader/Loader';\nimport { Title } from '../components/Title/Title';\nimport Notiflix from 'notiflix';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContactsError,\n  selectContactsIsLoading,\n} from '../redux/contacts/contacts.selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  return (\n    <div>\n      <Title title={'Phonebook'} />\n      <ContactForm />\n      {isLoading && <Loader />}\n      <Title title={'Contacts'} />\n      <Filter />\n      <ContactList />\n      {error !== null && Notiflix.Notify.warning({ error })}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Loader","_jsx","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","selectContacts","state","contactsStore","contacts","items","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","onChangeInput","e","value","target","children","_jsxs","className","css","onSubmit","preventDefault","newUser","some","item","Notiflix","concat","addContact","type","required","placeholder","onChange","pattern","selectIsOpenModal","modalStore","isOpenModal","selectModalData","modalData","console","dir","onClick","closeModal","src","icon","alt","ContactList","useEffect","fetchContacts","length","map","_ref","id","openModal","deleteContact","ModalContactDetail","Filter","filterValue","Title","title"],"sourceRoot":""}