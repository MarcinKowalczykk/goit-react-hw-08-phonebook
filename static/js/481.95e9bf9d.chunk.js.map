{"version":3,"file":"static/js/481.95e9bf9d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Layouts/ContactsPage.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\n\nimport { useState } from \"react\";\n//import propTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\"\n\nimport { addContactOp } from \"redux/contacts/ops\";\nimport { selectStatus } from \"redux/contacts/contactsSlice\";\n\nconst INIT_STATE = {\n    name: \"\",\n    number: \"\", //phone\n}\n\nexport default function ContactForm (/*{onSubmit}*/) {\n    const [contact, setContact] = useState({...INIT_STATE})\n    //state = { ...INIT_STATE };\n\n    const dispatch = useDispatch();\n\n    function onInputChange(event) {\n        const { name, value } = event.currentTarget;\n        // const inputValue = event.currentTarget.value;\n        setContact({...contact, [name]: value });\n    };\n\n    function onFormSubmit(event) {\n        event.preventDefault();\n        \n        //dispatch(addContact(contact));\n        dispatch(addContactOp(contact));\n        setContact({ ...INIT_STATE });\n    };\n\n    const reduxStatus = useSelector(selectStatus);\n\n    function isAdding() {\n        if (reduxStatus === \"adding\") {\n            return true;\n        }\n        return false;\n    }\n\n    function submitButtonTitle() {\n        if (reduxStatus === \"adding\") {\n            return \"Adding...\";\n        }\n        return \"Add contact\";\n    }\n\n    return (\n        <form action=\"submit\" className={style.formAddContact} onSubmit={onFormSubmit}>\n            <label className={style.formLabel}>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={onInputChange}\n                    value={contact.name}\n                    className={style.formInput}\n                />\n            </label>\n            \n            <label className={style.formLabel}>Phone number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={onInputChange}\n                    value={contact.number}\n                    className={style.formInput}\n                />\n            </label>\n            \n            <button type=\"submit\" className={style.formBtnSubmit} disabled={isAdding()}>{ submitButtonTitle()}</button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n    //onSubmit: propTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","//import debounce from \"debounce\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n//import propTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nimport { updateFilter } from \"redux/contacts/filter\";\nimport { selectFilter } from \"redux/contacts/contactsSlice\";\n\nconst Filter = (/*{ value, onChange }*/) => {\n  const value = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  function onFilterChange(event) {\n    //todo debounce\n    dispatch(updateFilter(event.currentTarget.value));\n\n  }\n\n    return (<label>Filter contacts:\n              <input\n                type=\"text\"\n                name=\"filter\"\n                onChange={onFilterChange}\n                value={value}\n                className={styles.inputFilter}\n              />\n            </label>);\n}\n\nFilter.propTypes = {\n    //value: propTypes.string,\n    //onChange: propTypes.func,\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactItem_contact__C4k7V\",\"contactName\":\"ContactItem_contactName__ZAMAK\"};","import styles from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDelete }) => {\n    return (<span className={styles.contact}>\n        <span className={styles.contactName}>{name} :</span>\n        {number}\n    </span>);\n}\n\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contact\":\"ContactList_contact__0STHS\",\"btnDeleteContact\":\"ContactList_btnDeleteContact__yYG3c\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nimport ContactItem from \"../ContactItem\";\n//import propTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\"\n\n/*import { selectItems } from \"../../redux/contacts/items\";\nimport { selectFilter } from \"redux/contacts/filter\";\nimport { selectStatus } from \"redux/contacts/status\";*/\nimport { selectItems, selectFilter, selectStatus } from \"redux/contacts/contactsSlice\";\n\nimport { getContactsOp/*, deleteContactOp */} from \"redux/contacts/ops\";\nimport { deleteContactWithFeedback } from \"redux/contacts/ops/deleteContactOp\";\n\nconst ContactList = () => {\n    const [isContactFetched, setIsContactFetched] = useState(false);\n\n    const lowCaseFilter = useSelector(selectFilter).toLowerCase();\n\n    const dispatch = useDispatch();\n    \n    const contacts = useSelector(selectItems);\n    const contactStatus = useSelector(selectStatus);\n\n    useEffect(() => {\n        //let promise = null;\n        if (!isContactFetched) {\n            /*promise = */dispatch(getContactsOp());\n            //console.log(promise);\n            setIsContactFetched(true);\n        }   \n        return () => {\n            /*if (promise !== null) {\n               promise.abort(); \n            }*/\n            //setIsContactFetched(false);\n        }\n    }, [isContactFetched, dispatch]);\n\n    /*function deleteContactById(id) {\n        //console.log(`Trying to delete contact ${id}`);\n        //dispatch(deleteContactOp(id))\n        deleteContactWithFeedback(id);\n        \n    }*/\n\n    return (<>\n        {(contactStatus === \"loading\") && <p>[Loading contacts]</p>}\n        {(contacts && (contacts.length === 0)) &&\n            <p>No contacts so far...</p>}\n        {(contacts && (contacts.length > 0)) &&\n            <ul className={styles.contactList}>\n                {contacts.map((contact) => {\n                    // console.log(`${contact.name.toLowerCase()} includes ${lowCaseFilter}: ${contact.name.toLowerCase().includes(lowCaseFilter)}`);\n                    return (contact.name.toLowerCase().includes(lowCaseFilter) &&\n                        <li key={contact.id} className={styles.contact}>\n                            <ContactItem\n                                name={contact.name}\n                                number={contact.number}\n                            />\n                            <button\n                                type=\"button\"\n                                onClick={() => deleteContactWithFeedback(contact.id)}\n                                className={styles.btnDeleteContact}\n                            >Delete contact\n                            </button>\n                        </li>);\n                })}\n            </ul>}  \n    </>             \n    );\n}\n\nContactList.propTypes = {\n    // contacts: propTypes.arrayOf(\n    //     propTypes.shape({\n    //         id: propTypes.string.isRequired,\n    //         name: propTypes.string.isRequired,\n    //         number:propTypes.string.isRequired,\n    //     })\n    // ).isRequired,\n    //filter: propTypes.string,\n}\n\nexport default ContactList;","//import { useSelector } from \"react-redux\";\n\n//import { getContacts } from \"js/connectionsAPI\";\n//import { selectUserToken } from \"redux/auth/authSlice\";\n\nimport ContactForm from \"../ContactForm\";\nimport Filter from \"../Filter\";\nimport ContactList from \"../ContactList\";\n\n\nexport default function ContactsLayout(props) {\n  /*const token = useSelector(selectUserToken);\n\n  console.log(token);*/\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm\n        //onSubmit={(newContact) => {addContact(newContact)}}\n      />\n\n      <h2>Contacts</h2>\n\n      <Filter\n        //value={filter}\n        //onChange={onFilterChange}\n      />\n\n      <ContactList\n        //contacts={contacts}\n        //filter={filter}\n      />\n    </>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"formAddContact\":\"ContactForm_formAddContact__PiX5x\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtnSubmit\":\"ContactForm_formBtnSubmit__vYcgg\"};"],"names":["INIT_STATE","name","number","ContactForm","_useState","useState","_objectSpread","_useState2","_slicedToArray","contact","setContact","dispatch","useDispatch","onInputChange","event","_event$currentTarget","currentTarget","value","_defineProperty","reduxStatus","useSelector","selectStatus","_jsxs","action","className","style","onSubmit","preventDefault","addContactOp","children","_jsx","type","pattern","title","required","onChange","disabled","selectFilter","updateFilter","styles","_ref","onDelete","isContactFetched","setIsContactFetched","lowCaseFilter","toLowerCase","contacts","selectItems","contactStatus","useEffect","getContactsOp","_Fragment","length","map","includes","ContactItem","onClick","deleteContactWithFeedback","id","ContactsLayout","props","Filter","ContactList"],"sourceRoot":""}